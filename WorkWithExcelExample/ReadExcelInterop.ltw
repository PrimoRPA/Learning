<?xml version="1.0" encoding="utf-16"?>
<SerializationRoot xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <WorkflowType>2</WorkflowType>
    <IsTestCase>false</IsTestCase>
    <UseArgs>false</UseArgs>
    <ScriptType>CS</ScriptType>
    <RootContainer>
        <ClassName>LTools.Workflow.View.WFOnlyCode</ClassName>
        <AssemblyName>LTools.Workflow, Version=1.0.6.1, Culture=neutral, PublicKeyToken=null</AssemblyName>
        <Properties>
            <SerializationItem>
                <IsListValue>false</IsListValue>
                <Name>ComponentName</Name>
            </SerializationItem>
            <SerializationItem>
                <IsListValue>false</IsListValue>
                <Name>ComponentID</Name>
                <Value xmlns:q1="http://microsoft.com/wsdl/types/" xsi:type="q1:guid">00000000-0000-0000-0000-000000000000</Value>
            </SerializationItem>
            <SerializationItem>
                <IsListValue>false</IsListValue>
                <Name>ContinueOnException</Name>
                <Value xsi:type="xsd:boolean">false</Value>
            </SerializationItem>
            <SerializationItem>
                <IsListValue>false</IsListValue>
                <Name>Variables</Name>
                <Value xsi:type="ArrayOfScriptVariable" />
            </SerializationItem>
            <SerializationItem>
                <IsListValue>false</IsListValue>
                <Name>ScriptCode</Name>
                <Value xsi:type="xsd:string">using System;
using System.Collections.Generic;
using System.Text;
using LTools.Scripting.Model;
using LTools.Network.Model;
using Excel = Microsoft.Office.Interop.Excel;

public class PrimoScript
{
	public static LTools.Scripting.CSharp.ScriptDebugger __debug;
	
	public void main(LTools.Common.Model.WorkflowData wf)
    {
		string workbookPath = (string)wf.GetArgument("in_workbookPath");
		string sheetName = (string)wf.GetArgument("in_sheetName");
		
        Excel.Application app = new Excel.Application();
		Excel.Workbook wb = app.Workbooks.Open(workbookPath);
		Excel.Worksheet sheet = (Excel.Worksheet)wb.Sheets[sheetName];
		Excel.Range excelRange = sheet.UsedRange;
        Excel.Range urRows = excelRange.Rows;
		
		int rowsCount = urRows.Count;
		
		DataRow workRow;  
		System.Data.DataTable dtExcel = new System.Data.DataTable();
		dtExcel.Columns.Add("Postcode");
		
        for(int i = 2; i &lt;= rowsCount; i++)
        {			
			dtExcel.Rows.Add(sheet.Range["A"+ i.ToString()].Value);
		}
				
		app.Quit();
		System.Runtime.InteropServices.Marshal.ReleaseComObject(app);
        wf.SetArgument("out_dtFromExcel", dtExcel);
    }	
}




</Value>
            </SerializationItem>
        </Properties>
        <Components />
    </RootContainer>
    <GlobalVariables />
    <Arguments>
        <ScriptVariable>
            <Name>out_dtFromExcel</Name>
            <Group />
            <DataTypeString>System.Data.DataTable</DataTypeString>
            <Direction>OUT</Direction>
        </ScriptVariable>
        <ScriptVariable>
            <Name>in_workbookPath</Name>
            <Group />
            <DataTypeString>String</DataTypeString>
            <Direction>IN</Direction>
        </ScriptVariable>
        <ScriptVariable>
            <Name>in_sheetName</Name>
            <Group />
            <DataTypeString>String</DataTypeString>
            <Direction>IN</Direction>
        </ScriptVariable>
    </Arguments>
</SerializationRoot>